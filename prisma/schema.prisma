// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Peng {
  NOTREQUIRED
  PREFERRED
  REQUIRED
}

enum Role {
  ADMIN
  USER
}

enum Term {
  FALL
  SPRING
  SUMMER
}

enum Day {
  FRIDAY
  MONDAY
  SATURDAY
  SUNDAY
  THURSDAY
  TUESDAY
  WEDNESDAY
}

model User {
  id Int @id @default(autoincrement())
  username String
  name String?
  password String
  role Role @default(value: USER)
  preferences Preference[]
  professorSettings ProfessorSettings[]
  courses Section[]
  active Boolean @default(value: true)
  peng Boolean?
}

model Course {
  term Term
  year Int
  id Int @id @default(autoincrement())
  subject String
  code String
  sections Section[]
  peng Peng
  weeklyHours Float?
  capacity Int @default(value: 0)
  startDate DateTime?
  endDate DateTime?
  @@unique([subject, code, year, term])
}

model Section {
  meetingTimes MeetingTime[]
  code String
  course Course @relation(fields: [courseId], references: [id])
  courseId Int
  @@unique([code, courseId])
  professor User? @relation(fields: [professorId], references: [id])
  professorId Int?
}

model MeetingTime {
  id Int @id @default(autoincrement())
  course Section @relation(fields: [sectionCode, sectionCourseId], references: [code, courseId])
  sectionCode String
  sectionCourseId Int
  day Day?
  startTime DateTime?
  endTime DateTime?
  schedule Schedule @relation(fields: [scheduleID], references: [id])
  scheduleID Int
}

model Schedule {
  id Int @id @default(autoincrement())
  year Int
  createdAt DateTime
  meetingTimes MeetingTime[]
}

model Preference {
  user User @relation(fields: [userID], references: [id])
  userID Int
  courseID Int
  rank Int?
  @@id([userID, courseID])
}

model ProfessorSettings {
  user User @relation(fields: [userID], references: [id])
  userID Int @id
  year Int
  maxCoursesFall Int
  maxCoursesSpring Int
  maxCoursesSummer Int
  hasRelief Boolean
  reliefReason String
  hasTopic Boolean
  topicDescription String
}