"""
"""
"""Administratorrole(departmentstaffetc.)"""
"""Authtokenusedforfuturerequests"""
"""Changethepasswordofthecurrentlyloggedinuser"""
"""CourseTitlee.g.IntroductiontoArtificialIntelligence"""
"""Coursecode,e.g.499,310"""
"""Coursecode,e.g.499,310"""
"""Coursesubject,e.g.SENG,CSC"""
"""Coursesubject,e.g.SENG,CSC"""
"""Daysoftheweektheclassisofferedin-seeDay"""
"""Determineiftheuserismarkedactive"""
"""Endtime"""
"""Findauserbytheirid"""
"""Generateschedule"""
"""GetTeachingPreferenceSurveyforthecurrentuser"""
"""Getalistofcoursesforagiventermand/oryear"""
"""Getallusers"""
"""Getthecurrentuser"""
"""Howmanyhoursperweekacoursetakes"""
"""IDoftheschedule"""
"""IDofusertochangepasswordfor"""
"""Loginintoauseraccountusingemailandpassword"""
"""Logoutthecurrentlyloggedinuser"""
"""Maximumcapacityofthesection"""
"""Nameoftheuser"""
"""Newactivestatusofuser"""
"""Newnameofuser"""
"""Newroleofuser"""
"""Newuserpassword"""
"""Numberofsectionsinthecourse"""
"""Optionalerrormessageifsuccessisfalse"""
"""Optionalerrormessage"""
"""Password"""
"""Professor'sinfo,ifanyprofessorsareassigned"""
"""Registeranewuseraccount"""
"""Resetauserspassword."""
"""Scheduledcourses"""
"""Sectionnumberforcourses,eg:A01,A02"""
"""Starttime"""
"""Teachingpreferences"""
"""Termcourseisofferedin"""
"""Thecourseidentifier"""
"""Theenddateofthecourse"""
"""Thestartdateofthecourse"""
"""Updatesausergiventheuserid."""
"""Useridtobechanged"""
"""Userid"""
"""Userrole(professor,studentetc.)"""
"""Username"""
"""Weekday-seeDayEnum"""
"""Whentheschedulewasgenerated"""
"""Whetherauthoperationwassuccessfulornot"""
"""Whetherthepasswordwassuccessfullyreset"""
"""Yearcourseisofferedin"""
"""Yearfortheschedule"""
"""role-seeenumRole"""
ADMIN
COMPANY3
COMPANY4
CourseID:CourseID!
FALL
FRIDAY
MONDAY
SATURDAY
SPRING
SUMMER
SUNDAY
Scheduleforagiventerm.Ifyearisgiven,returnsthemostrecentschedulegeneratedforthatyear.
THURSDAY
TUESDAY
USER
WEDNESDAY
active:Boolean
active:Boolean!
algorithm1:Company!
algorithm2:Company!
allUsers:[User!]
capacity:Int!
changeUserPassword(input:ChangeUserPasswordInput!):Response!
code:String!
code:String!
courses(term:Term!):[CourseSection!]
courses(term:Term,year:Int):[CourseSection!]
courses:[CoursePreference!]!
createUser(input:CreateUserInput!):CreateUserMutationResult!
createdAt:Date!
currentPassword:String!
day:Day!
endDate:Date!
endTime:Date!
errors:[Error!]
errors:[Error!]
fallCourses:[CourseInput!]
findUserById(id:Int!):User
generateSchedule(input:GenerateScheduleInput!):Response!
hoursPerWeek:Float!
id:CourseID!
id:ID!
id:Int!
id:Int!
id:Int!
login(password:String!,username:String!):AuthPayload!
logout:AuthPayload!
me:User
meetingTimes:[MeetingTime!]!
message:String
message:String
message:String
message:String
message:String!
name:String
name:String
name:String
newPassword:String!
password:String
password:String
password:String!
password:String!
preference:Int!
preferences:[CoursePreference!]
professors:[User!]
resetPassword(id:ID!):ResetPasswordMutationResult!
role:Role
role:Role!
role:Role!
schedule(year:Int):Schedule
section:Int!
sectionNumber:String
springCourses:[CourseInput!]
startDate:Date!
startTime:Date!
subject:String!
subject:String!
success:Boolean!
success:Boolean!
success:Boolean!
success:Boolean!
summerCourses:[CourseInput!]
survey:TeachingPreferenceSurvey!
term:Term!
title:String
token:String!
updateUser(input:UpdateUserInput!):UpdateUserMutationResult
user:User
username:String
username:String!
username:String!
year:Int!
year:Int!
year:Int!
"""
"""
"""Company3and4"""
"""DaysoftheWeek"""
"""Generatedscheduleforayear"""
"""Returnedwhenauserlogsinourlogsout."""
"""UVicTerms"""
"""Userrole"""
"""Weekdayandtimeofacoursesectionoffering"""
AsetofCourseSectionswithmatchingCourseIDrepresentacourseoffering
enumCompany{
enumDay{
enumRole{
enumTerm{
inputChangeUserPasswordInput{
inputCourseInput{
inputCreateUserInput{
inputGenerateScheduleInput{
inputUpdateUserInput{
scalarDate
typeAuthPayload{
typeCourseID{
typeCoursePreference{
typeCourseSection{
typeCreateUserMutationResult{
typeError{
typeMeetingTime{
typeMutation{
typeQuery{
typeResetPasswordMutationResult{
typeResponse{
typeSchedule{
typeTeachingPreferenceSurvey{
typeUpdateUserMutationResult{
typeUser{
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
